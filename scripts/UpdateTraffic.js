//AJAX
let trafficIndexFlag;
let showIndexFlag;
// let trafficJSON = require('fs');
function setIndexFlag() {
  if (localStorage.getItem("trafficIndexFlag")) {
    trafficIndexFlag = localStorage.getItem("trafficIndexFlag");
  } else {
    trafficIndexFlag = 0;
    localStorage.setItem("trafficIndexFlag", 0);
  }
  if (localStorage.getItem("showIndexFlag")) {
    showIndexFlag = localStorage.getItem("showIndexFlag");
  } else {
    showIndexFlag = 0;
    localStorage.setItem("showIndexFlag", 0);
  }
}

async function updateTraffic() {
  setIndexFlag();
  let url = "http://192.168.50.129:8080/data";
  return await $.getJSON(url, {
    'index': trafficIndexFlag
  })
};

function updateCard(data) {
  $("#malware-traffic-sum").text(data.abnormal_data_length);
  $("#normal-traffic-sum").text(data.normal_data_length);
}

function updateFlag(data) {
  if (data.abnormal_data_length > trafficIndexFlag) {
    $('#modal-danger').modal('show');
  }
  trafficIndexFlag = data.abnormal_data_length;
  localStorage.setItem("trafficIndexFlag", trafficIndexFlag);
}

function updateDonutChart(data) {
  donutChart.config.data.datasets[0].data[1] = data.abnormal_data_length;
  donutChart.config.data.datasets[0].data[0] = data.normal_data_length;
  donutChart.update();
}

function setListToBeShown(detailedInfo) {
  let flag = parseInt(localStorage.getItem("showIndexFlag"));
  localStorage.setItem(`show[${flag}]`, JSON.stringify(detailedInfo))
  flag = (flag + 1) % 10;
  localStorage.setItem("showIndexFlag", flag);
};

function updateMalwareList(detailedInfo) {
  setListToBeShown(detailedInfo);
  let $parent = $('.malware-realtime');
  let $first = $parent.find('li:first');
  let height = $first.height();
  $first.animate({
    marginTop: -height + 'px'
  }, 100, function () {
    $first.remove();
  });
  $(".malware-realtime").css('marginTop', 0).append(`
  <li>
    <span>${detailedInfo.index}</span>
    <span>${detailedInfo.tuple.slice(1, 4)}</span>
    <span>${detailedInfo.tuple
        .slice(
          index(detailedInfo.tuple, '_', 0) + 1,
          index(detailedInfo.tuple, '_', 1))}
    </span>
    <span>${detailedInfo.tuple
        .slice(
          index(detailedInfo.tuple, '_', 1) + 1,
          index(detailedInfo.tuple, '_', 2))}
    </span>
    <span>${detailedInfo.tuple
        .slice(
          index(detailedInfo.tuple, '_', 2) + 1,
          index(detailedInfo.tuple, '_', 3))}
    </span>
    <span>${detailedInfo.tuple
        .slice(
          index(detailedInfo.tuple, '_', 3) + 1,
          index(detailedInfo.tuple, '_', 4))}
    </span>
    <span>${dateFormat('YYYY-mm-dd HH:MM', new Date(parseInt(detailedInfo.data.timestamp)))}</span>
  </li>
          `);
}

function updateMalwareData(data) {
  let dataLength = data.detailed_info.length;
  let $parent = $('.malware-realtime');
  data.detailed_info.forEach(detailedInfo => {
    setListToBeShown(detailedInfo);
    $(".malware-realtime").css('marginTop', 0).append(`
    <li>
    <span>${detailedInfo.index}</span>
    <span>${detailedInfo.tuple.slice(0, 3)}</span>
    <span>${detailedInfo.tuple
        .slice(
          index(detailedInfo.tuple, '_', 0) + 1,
          index(detailedInfo.tuple, '_', 1))}
    </span>
    <span>${detailedInfo.tuple
        .slice(
          index(detailedInfo.tuple, '_', 1) + 1,
          index(detailedInfo.tuple, '_', 2))}
    </span>
    <span>${detailedInfo.tuple
        .slice(
          index(detailedInfo.tuple, '_', 2) + 1,
          index(detailedInfo.tuple, '_', 3))}
    </span>
    <span>${detailedInfo.tuple
        .slice(
          index(detailedInfo.tuple, '_', 3) + 1,
          index(detailedInfo.tuple, '_', 4))}
    </span>
    <span>${dateFormat('YYYY-mm-dd HH:MM', new Date(parseInt(detailedInfo.data.timestamp)))}</span>
  </li>
    `);
  });
  let $list = $parent.find(`li:lt(${dataLength})`);
  $list.wrapAll("<div class='wrap-div'></div>");
  let $wrap = $('.wrap-div');
  let height = $wrap.height();
  $wrap.animate({
    marginTop: -height + 'px'
  }, 900, function () {
    $wrap.remove();
  });
}

function index(str, cha, num) {
  var x = str.indexOf(cha);
  for (var i = 0; i < num; i++) {
    x = str.indexOf(cha, x + 1);
  }
  return x;
}

function dateFormat(fmt, date) {
  let ret;
  const opt = {
    "Y+": date.getFullYear().toString(),        // 年
    "m+": (date.getMonth() + 1).toString(),     // 月
    "d+": date.getDate().toString(),            // 日
    "H+": date.getHours().toString(),           // 时
    "M+": date.getMinutes().toString(),         // 分
    "S+": date.getSeconds().toString()          // 秒
    // 有其他格式化字符需求可以继续添加，必须转化成字符串
  };
  for (let k in opt) {
    ret = new RegExp("(" + k + ")").exec(fmt);
    if (ret) {
      fmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, "0")))
    };
  };
  return fmt;
}